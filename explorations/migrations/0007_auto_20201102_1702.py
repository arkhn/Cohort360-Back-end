# Generated by Django 2.2.9 on 2020-11-02 17:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('explorations', '0006_auto_20201102_1701'),
    ]

    operations = [
        #####################
        # ALTER REQUEST_QUERY_SNAPSHOT
        # DatedMeasure -> RequestQuerySnapshot: move refresh_every_second and refresh_create_cohort values
        # to matching RequestQuerySnapshot
        migrations.RunSQL(
            sql="UPDATE explorations_requestquerysnapshot"
                " SET refresh_create_cohort = dm.refresh_create_cohort, refresh_every_seconds=dm.refresh_every_seconds"
                " FROM explorations_requestquerysnapshot rqs"
                " INNER JOIN explorations_datedmeasure dm"
                " ON dm.request_query_snapshot_id=rqs.uuid"
        ),
        migrations.RemoveField(
            model_name='datedmeasure',
            name='refresh_create_cohort',
        ),
        migrations.RemoveField(
            model_name='datedmeasure',
            name='refresh_every_seconds',
        ),

        #####################
        # ALTER DATED_MEASURES
        # ADD DATED_MEASURE ROWS
        migrations.RunSQL(  # we add DatedMeasure for each CohortResult
            sql="INSERT INTO explorations_DatedMeasure ("
                " created_at, owner_id, request_query_snapshot_id, request_id, fhir_datetime, measure"
                " )"
                " SELECT created_at, owner_id, request_query_snapshot_id, request_id, created_at, result_size"
                " FROM explorations_CohortResult",
        ),

        #####################
        # ALTER COHORT_RESULT
        # cohortresult -> DatedMeasure: move result_size to DatedMeasure rows
        migrations.RunSQL(  # For each CohortResult, we set foreign key to DatedMeasure on same created_at and RQS
            sql="UPDATE explorations_CohortResult"
                " SET dated_measure_id=dm.uuid"
                " FROM explorations_CohortResult cr"
                " INNER JOIN explorations_DatedMeasure dm"
                " ON cr.created_at=dm.created_at AND cr.request_query_snapshot_id=dm.request_query_snapshot_id"
        ),
        # move fhir_group_ids to fhir_group_id
        # will transform '["uuid1", "uuid2"]' from fhir_group_ids into 'uuid1', for fhir_group_id
        migrations.RunSQL(
            sql="UPDATE explorations_CohortResult cr"
                " SET fhir_group_id=REPLACE("
                " SPLIT_PART("
                " REPLACE("
                " REPLACE(fhir_groups_ids, '[', '')"
                " , ']', '')"
                " , ',', 1)"
                " , '\"', '')"
        ),
        migrations.RunSQL(  # default value after this migration
            sql="UPDATE explorations_CohortResult"
                " SET request_job_status='finished'"
        ),
        migrations.RemoveField(
            model_name='cohortresult',
            name='fhir_groups_ids',
        ),
        migrations.RemoveField(
            model_name='cohortresult',
            name='result_size',
        ),
    ]
